/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Square.Connect.Client;
using Square.Connect.Api;
using Square.Connect.Model;

namespace Square.Connect.Test
{
    /// <summary>
    ///  Class for testing EmployeesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EmployeesApiTests
    {
        private EmployeesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EmployeesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EmployeesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EmployeesApi
            //Assert.IsInstanceOfType(typeof(EmployeesApi), instance, "instance is a EmployeesApi");
        }

        
        /// <summary>
        /// Test ListEmployees
        /// </summary>
        [Test]
        public void ListEmployeesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string locationId = null;
            //string status = null;
            //int? limit = null;
            //string cursor = null;
            //var response = instance.ListEmployees(locationId, status, limit, cursor);
            //Assert.IsInstanceOf<ListEmployeesResponse> (response, "response is ListEmployeesResponse");
        }
        
        /// <summary>
        /// Test RetrieveEmployee
        /// </summary>
        [Test]
        public void RetrieveEmployeeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.RetrieveEmployee(id);
            //Assert.IsInstanceOf<RetrieveEmployeeResponse> (response, "response is RetrieveEmployeeResponse");
        }
        
    }

}
